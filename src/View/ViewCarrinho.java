package View;

import Model.*;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

public class ViewCarrinho extends ViewProdutos {
    ModelClientes modelCliente = new ModelClientes();
    ModelVendas modelVenda = new ModelVendas();
    ModelItensVenda modelItensVenda = new ModelItensVenda();
    Controller.ControllerClientes controllerCliente = new Controller.ControllerClientes();
    ArrayList<ModelClientes> listaClientes = new ArrayList<>();
    
    /**
     * Creates new form ViewCarrinho
     */
    public ViewCarrinho() {
        initComponents();
        ShowAllProducts();
        ShowAllClients();
        int pIdProduto = 0;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PainelCarrinho = new javax.swing.JPanel();
        ListCarrinho = new javax.swing.JScrollPane();
        TabelaCarrinho = new javax.swing.JTable();
        btnLimparCarrinho = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        txtValorTotalVenda = new javax.swing.JTextField();
        lblvendendo = new javax.swing.JLabel();
        btnFinalizarCompra = new javax.swing.JButton();
        lblTopocar = new javax.swing.JLabel();
        btnRemoverdoCarrinho = new javax.swing.JButton();
        listVendaCliente = new componentes.UJComboBox();
        PainelProdutos = new javax.swing.JPanel();
        txtPesquisarProduto = new javax.swing.JTextField();
        lblInfo = new javax.swing.JLabel();
        btnPesquisarProduto = new javax.swing.JButton();
        ListProdutos = new javax.swing.JScrollPane();
        TabelaProdutos = new javax.swing.JTable();
        lblquant = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JSpinner();
        valorproduto = new javax.swing.JLabel();
        txtValorSomaProdutos = new javax.swing.JTextField();
        btnAdicionarAoCarrinho = new javax.swing.JButton();
        lblTopo = new javax.swing.JLabel();

        PainelCarrinho.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        TabelaCarrinho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "ID", "Nome", "Marca", "Valor unidade", "Quantidade", "Valor total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ListCarrinho.setViewportView(TabelaCarrinho);

        btnLimparCarrinho.setText("Limpar Carrinho");
        btnLimparCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCarrinhoActionPerformed(evt);
            }
        });

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTotal.setText("Total");

        txtValorTotalVenda.setEditable(false);

        lblvendendo.setText("Vendendo para:");

        btnFinalizarCompra.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnFinalizarCompra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/symbol_check.gif"))); // NOI18N
        btnFinalizarCompra.setText("Finalizar");
        btnFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarCompraActionPerformed(evt);
            }
        });

        lblTopocar.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblTopocar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopocar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cart.gif"))); // NOI18N
        lblTopocar.setText("Carrinho de compras");

        btnRemoverdoCarrinho.setText("Remover");
        btnRemoverdoCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverdoCarrinhoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelCarrinhoLayout = new javax.swing.GroupLayout(PainelCarrinho);
        PainelCarrinho.setLayout(PainelCarrinhoLayout);
        PainelCarrinhoLayout.setHorizontalGroup(
            PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelCarrinhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ListCarrinho, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 531, Short.MAX_VALUE)
                    .addGroup(PainelCarrinhoLayout.createSequentialGroup()
                        .addComponent(btnLimparCarrinho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblvendendo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listVendaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelCarrinhoLayout.createSequentialGroup()
                        .addComponent(btnRemoverdoCarrinho)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PainelCarrinhoLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnFinalizarCompra))
                            .addGroup(PainelCarrinhoLayout.createSequentialGroup()
                                .addComponent(lblTotal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtValorTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(lblTopocar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PainelCarrinhoLayout.setVerticalGroup(
            PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelCarrinhoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTopocar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimparCarrinho)
                    .addComponent(lblvendendo)
                    .addComponent(listVendaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ListCarrinho, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotal)
                    .addComponent(txtValorTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(PainelCarrinhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFinalizarCompra)
                    .addComponent(btnRemoverdoCarrinho))
                .addContainerGap())
        );

        PainelProdutos.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtPesquisarProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisarProdutoKeyPressed(evt);
            }
        });

        lblInfo.setFont(new java.awt.Font("Tahoma", 2, 10)); // NOI18N
        lblInfo.setText("<html>*Nome ou CÃ³digo do produto</html>");

        btnPesquisarProduto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnPesquisarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/search.gif"))); // NOI18N
        btnPesquisarProduto.setText("Pesquisar");
        btnPesquisarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarProdutoActionPerformed(evt);
            }
        });

        TabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Marca", "Valor", "Estoque"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TabelaProdutos.getTableHeader().setReorderingAllowed(false);
        TabelaProdutos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelaProdutosMouseClicked(evt);
            }
        });
        ListProdutos.setViewportView(TabelaProdutos);

        lblquant.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblquant.setText("Quantidade");

        txtQuantidade.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtQuantidade.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        txtQuantidade.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtQuantidadeStateChanged(evt);
            }
        });

        valorproduto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        valorproduto.setText("Valor Atualizado");

        txtValorSomaProdutos.setEditable(false);

        btnAdicionarAoCarrinho.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnAdicionarAoCarrinho.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/cart_add.gif"))); // NOI18N
        btnAdicionarAoCarrinho.setText("Adicionar ao Carrinho");
        btnAdicionarAoCarrinho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarAoCarrinhoActionPerformed(evt);
            }
        });

        lblTopo.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblTopo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopo.setText("Selecione o(s) produto(s)");

        javax.swing.GroupLayout PainelProdutosLayout = new javax.swing.GroupLayout(PainelProdutos);
        PainelProdutos.setLayout(PainelProdutosLayout);
        PainelProdutosLayout.setHorizontalGroup(
            PainelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ListProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                    .addComponent(lblTopo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(PainelProdutosLayout.createSequentialGroup()
                        .addComponent(lblquant)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(valorproduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorSomaProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PainelProdutosLayout.createSequentialGroup()
                        .addGroup(PainelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PainelProdutosLayout.createSequentialGroup()
                                .addComponent(txtPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisarProduto)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelProdutosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAdicionarAoCarrinho)))
                .addContainerGap())
        );
        PainelProdutosLayout.setVerticalGroup(
            PainelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelProdutosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTopo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PainelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisarProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisarProduto))
                .addComponent(lblInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ListProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtValorSomaProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valorproduto)
                    .addGroup(PainelProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblquant)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(57, 57, 57)
                .addComponent(btnAdicionarAoCarrinho)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PainelCarrinho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(PainelProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PainelProdutos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PainelCarrinho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TabelaProdutosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelaProdutosMouseClicked
        CalcularQuantidadeProduto();
        txtQuantidade.setValue(1);
    }//GEN-LAST:event_TabelaProdutosMouseClicked

    private void txtPesquisarProdutoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisarProdutoKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            FiltrarProduto();
        }
    }//GEN-LAST:event_txtPesquisarProdutoKeyPressed

    private void btnPesquisarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarProdutoActionPerformed
        FiltrarProduto();
    }//GEN-LAST:event_btnPesquisarProdutoActionPerformed

    private void btnAdicionarAoCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarAoCarrinhoActionPerformed
        AdicionarAoCarrinho();
    }//GEN-LAST:event_btnAdicionarAoCarrinhoActionPerformed

    private void btnFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarCompraActionPerformed
        JOptionPane.showMessageDialog(this, "Compra realizada com sucesso!");
    }//GEN-LAST:event_btnFinalizarCompraActionPerformed

    private void btnRemoverdoCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverdoCarrinhoActionPerformed
        RemoverProdutoDoCarrinho();
    }//GEN-LAST:event_btnRemoverdoCarrinhoActionPerformed

    private void txtQuantidadeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtQuantidadeStateChanged
        CalcularQuantidadeProduto();
    }//GEN-LAST:event_txtQuantidadeStateChanged

    private void btnLimparCarrinhoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCarrinhoActionPerformed
        TabelaCarrinho.removeAll();
    }//GEN-LAST:event_btnLimparCarrinhoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ListCarrinho;
    private javax.swing.JScrollPane ListProdutos;
    private javax.swing.JPanel PainelCarrinho;
    private javax.swing.JPanel PainelProdutos;
    private javax.swing.JTable TabelaCarrinho;
    private javax.swing.JTable TabelaProdutos;
    private javax.swing.JButton btnAdicionarAoCarrinho;
    private javax.swing.JButton btnFinalizarCompra;
    private javax.swing.JButton btnLimparCarrinho;
    private javax.swing.JButton btnPesquisarProduto;
    private javax.swing.JButton btnRemoverdoCarrinho;
    private javax.swing.JLabel lblInfo;
    private javax.swing.JLabel lblTopo;
    private javax.swing.JLabel lblTopocar;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblquant;
    private javax.swing.JLabel lblvendendo;
    private componentes.UJComboBox listVendaCliente;
    private javax.swing.JTextField txtPesquisarProduto;
    private javax.swing.JSpinner txtQuantidade;
    private javax.swing.JTextField txtValorSomaProdutos;
    private javax.swing.JTextField txtValorTotalVenda;
    private javax.swing.JLabel valorproduto;
    // End of variables declaration//GEN-END:variables


    //MÃ©todos 
    private void ShowAllProducts(){
        ListaDeProdutos = ControleDeProdutos.ListaProdutosController();
        DefaultTableModel Tabela = (DefaultTableModel) TabelaProdutos.getModel();
        Tabela.setNumRows(0);
        for (int i = 0; i < ListaDeProdutos.size(); i++) {
            Tabela.insertRow(i, new Object[]{
                ListaDeProdutos.get(i).getIdProduto(),
                ListaDeProdutos.get(i).getNomeProduto(),
                ListaDeProdutos.get(i).getMarcaProduto(),
                ListaDeProdutos.get(i).getValorProduto(),
                ListaDeProdutos.get(i).getEstoqueProduto(),
                ListaDeProdutos.get(i).getDetalhesProduto()
            });
        }
    }
    
    private void ShowAllClients(){
        listaClientes = controllerCliente.ListaClientesController();
        listVendaCliente.removeAllItems();
        listVendaCliente.addItem("Nenhum Cliente Selecionado");
        for (int i = 0; i < listaClientes.size(); i++) {
            listVendaCliente.addItem(listaClientes.get(i).getCpfCliente() + " - " + listaClientes.get(i).getNomeCliente());
        }
    }
    
    private void AdicionarAoCarrinho(){
        //verificando se o produto foi selecionado
        try {
            int pIdProduto = (int) TabelaProdutos.getValueAt(TabelaProdutos.getSelectedRow(), 0);
            int quantSelecionada = Integer.parseInt(txtQuantidade.getValue().toString());
            int quantEstoque = (int) TabelaProdutos.getValueAt(TabelaProdutos.getSelectedRow(), 4);
            //Verificando se hÃ¡ estoque o suficiente para a venda
            if (quantSelecionada <= quantEstoque) {
                modelProdutos = ControleDeProdutos.PesquisaProdutoController(pIdProduto);
                DefaultTableModel Tabela = (DefaultTableModel) TabelaCarrinho.getModel();
                Tabela.addRow(new Object[]{
                    modelProdutos.getIdProduto(),
                    modelProdutos.getNomeProduto(),
                    modelProdutos.getMarcaProduto(),
                    modelProdutos.getValorProduto(),
                    txtQuantidade.getValue(),
                    txtValorSomaProdutos.getText()});
                txtQuantidade.setValue(1);
                CalcularTotalVenda();
                ShowAllProducts();
            }else{
                JOptionPane.showMessageDialog(this, "NÃ£o hÃ¡ estoque o suficiente para a venda");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nenhum produto foi selecionado!");
        }
    }
    
    private void RemoverProdutoDoCarrinho(){
        try {
            DefaultTableModel Tabela = (DefaultTableModel) TabelaCarrinho.getModel();
            Tabela.removeRow(TabelaCarrinho.getSelectedRow());
            CalcularTotalVenda();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Nenhum produto foi selecionado!");
        }
    }
    
    //Gravar itens do carrinho no DB
    private void GravarVenda(){
        
    }
    
    private void CalcularQuantidadeProduto(){
        int pIdProduto = (int) TabelaProdutos.getValueAt(TabelaProdutos.getSelectedRow(), 0);
        modelProdutos = ControleDeProdutos.PesquisaProdutoController(pIdProduto);
        double quantidade = Double.parseDouble(txtQuantidade.getValue().toString());
        //Preenchendo valores
        if(quantidade == 1){
            txtValorSomaProdutos.setText(String.valueOf(modelProdutos.getValorProduto()));
        }else{
            txtValorSomaProdutos.setText(String.valueOf((modelProdutos.getValorProduto()*quantidade)));
        }
    }
    
    private void CalcularTotalVenda(){
        double totalVenda = 0, valor;
        int cont = TabelaCarrinho.getRowCount();
            for (int i = 0; i < cont; i++) {
            valor = Double.parseDouble(TabelaCarrinho.getValueAt(i, 5).toString());
            totalVenda = totalVenda + valor;
        }
        txtValorTotalVenda.setText("R$ " + totalVenda);
    }
    
    private void AtualizarEstoque(){
        
    }
    
    private void FiltrarProduto(){
        DefaultTableModel Tabela = (DefaultTableModel) TabelaProdutos.getModel();
        final TableRowSorter<DefaultTableModel> Pesquisa = new TableRowSorter<>(Tabela);
        this.TabelaProdutos.setRowSorter(Pesquisa);
        String filtro = txtPesquisarProduto.getText();
        Pesquisa.setRowFilter(RowFilter.regexFilter(filtro, 0,1));
    }
    
    
    
    
}
